/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Proceso;
import Model.SO;
import Model.Usuario;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.Timer;

/**
 *
 * @author Percy
 */
public class PanelSO extends javax.swing.JFrame implements ActionListener{
    static int delay = 51;
    private boolean encendido = false;
    
    private final Timer t = new Timer(delay, this);
    private final SO so = SO.getInstance();
    private final Usuario u = new Usuario(so);
        
    public PanelSO() {
        this.setMinimumSize(new Dimension(1600, 950));
        this.setTitle("Simulador SO - G2");
        initComponents();
    }
    
    @Override
    // Cada "delay" segundos se ejecuta este método
    // que se encarga de actualizar el panel de procesos
    // la tabla de listos, bloqueados, en ejecución
    // los históricos de ejecución y terminados
    public void actionPerformed(ActionEvent e) {
        if(encendido){
            so.graficarColaProcesos(ColaProcesos,tblEjec,tblListos,tblBloqueados,tblFinal,tblHistEjec,tblHistBloqueados, tlbListaProcesos, tlbDisco,tlbImpresora,tlbTeclado,tlbMouse,tlbUSB, tlbInterrupciones);
            so.generarEstadisticas(lblTiempoUso, lblTiempoOcioso, lblTiempoEspProm, lblDuracion,lblFragmentacion,lblTiempoRespuesta,lblWaitingTime);
            so.graficarEspacioMemoria(MemoriaRAM);
            txtPID.setText(Integer.toString(Proceso.numeroProcesos));
            validate();
        }
    }

    //Inicia y detiene la simulación
    private void iniciarSimulacion(){
        if(!encendido){
            so.iniciar();
            // Inicia el timer de la clase usuario
            // Para que genere procesos aleatorios en tiempos aleatorios
            if (chbValoresAleatorios.isSelected()) {
                u.iniciar();
            }
            t.start();
            encendido = true;
            btnPlayStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/stop.png")));
        }else{
            t.stop();
            so.parar();
            u.parar();
            encendido = false;
            btnPlayStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/play.png")));
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabbedPaneSO = new javax.swing.JTabbedPane();
        PanelSistemaOperativo = new javax.swing.JPanel();
        PanelConfiguracion = new javax.swing.JPanel();
        PanelProcesos = new javax.swing.JPanel();
        lblBursTime = new javax.swing.JLabel();
        txtBurstTime = new javax.swing.JTextField();
        lblPID = new javax.swing.JLabel();
        txtPID = new javax.swing.JTextField();
        chbValoresAleatorios = new javax.swing.JCheckBox();
        btnAddProceso = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        PanelPoliticaPlanif = new javax.swing.JPanel();
        lblAlgoritmoPlanificacion = new javax.swing.JLabel();
        cmbAlgoritmoPlanificacion = new javax.swing.JComboBox<>();
        lblTipoPolitica = new javax.swing.JLabel();
        cmbTipoPoliticaPlanif = new javax.swing.JComboBox<>();
        txtTimeQuantum = new javax.swing.JLabel();
        spnTimeQuantum = new javax.swing.JSpinner();
        PoliticaConfigAdic = new javax.swing.JPanel();
        txtAsigMemoria = new javax.swing.JLabel();
        txtCapMemoria = new javax.swing.JLabel();
        cmbAsigMemoria = new javax.swing.JComboBox<>();
        spnCapMemoria = new javax.swing.JSpinner();
        PanelSimulacion = new javax.swing.JPanel();
        PanelVelocidadSimulacion = new javax.swing.JPanel();
        sldVelocidad = new javax.swing.JSlider();
        btnPlayStop = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PanelColaProcesos = new javax.swing.JPanel();
        ScrollColaProcesos = new javax.swing.JScrollPane();
        ColaProcesos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PanelMemoriaRAM = new javax.swing.JPanel();
        ScrollMemoriaRAM = new javax.swing.JScrollPane();
        MemoriaRAM = new javax.swing.JPanel();
        PanelEstadisticas = new javax.swing.JPanel();
        lblTiempoUso = new javax.swing.JLabel();
        lblTiempoOcioso = new javax.swing.JLabel();
        lblTiempoEspProm = new javax.swing.JLabel();
        lblDuracion = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblFragmentacion = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblTiempoRespuesta = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblWaitingTime = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        PanelLeyendaProcesos = new javax.swing.JPanel();
        LeyendaEjec = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        LeyendoListos = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        LeyendaBloqueados = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        LeyendaFinalizados = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        LeyendaError = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        PanelTablasProcesos = new javax.swing.JPanel();
        PanelEjecutando = new javax.swing.JPanel();
        ScrollEjecutando = new javax.swing.JScrollPane();
        tblEjec = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        PanelListos = new javax.swing.JPanel();
        ScrollListos = new javax.swing.JScrollPane();
        tblListos = new javax.swing.JTable();
        PanelBloqueados = new javax.swing.JPanel();
        ScrollBloqueados = new javax.swing.JScrollPane();
        tblBloqueados = new javax.swing.JTable();
        PanelFinalizados = new javax.swing.JPanel();
        ScrollFinalizados = new javax.swing.JScrollPane();
        tblFinal = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        ScrollFinalizados1 = new javax.swing.JScrollPane();
        tlbListaProcesos = new javax.swing.JTable();
        PanelTablaProcesosHistorico = new javax.swing.JPanel();
        PanelProcesosEjecutados = new javax.swing.JPanel();
        ScrollHistoricoEjec = new javax.swing.JScrollPane();
        tblHistEjec = new javax.swing.JTable();
        PanelProcesosBloqueados = new javax.swing.JPanel();
        ScrollHistoricoBloqueados = new javax.swing.JScrollPane();
        tblHistBloqueados = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        ScrollFinalizados2 = new javax.swing.JScrollPane();
        tlbDisco = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        ScrollFinalizados3 = new javax.swing.JScrollPane();
        tlbImpresora = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        ScrollFinalizados4 = new javax.swing.JScrollPane();
        tlbTeclado = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        ScrollFinalizados5 = new javax.swing.JScrollPane();
        tlbMouse = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        ScrollFinalizados6 = new javax.swing.JScrollPane();
        tlbUSB = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        PanelProcesosEjecutados1 = new javax.swing.JPanel();
        ScrollHistoricoEjec1 = new javax.swing.JScrollPane();
        tlbInterrupciones = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TabbedPaneSO.setMinimumSize(new java.awt.Dimension(1500, 500));

        PanelConfiguracion.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros de los Procesos"));

        PanelProcesos.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar Nuevos Procesos"));

        lblBursTime.setText("Burst Time");

        lblPID.setText("PID");

        txtPID.setEnabled(false);

        chbValoresAleatorios.setText("Generar Valores Aleatorios");
        chbValoresAleatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbValoresAleatoriosActionPerformed(evt);
            }
        });

        btnAddProceso.setText("Agregar Proceso");
        btnAddProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProcesoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelProcesosLayout = new javax.swing.GroupLayout(PanelProcesos);
        PanelProcesos.setLayout(PanelProcesosLayout);
        PanelProcesosLayout.setHorizontalGroup(
            PanelProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelProcesosLayout.createSequentialGroup()
                        .addComponent(lblPID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPID, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelProcesosLayout.createSequentialGroup()
                        .addComponent(lblBursTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBurstTime, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelProcesosLayout.createSequentialGroup()
                        .addComponent(chbValoresAleatorios)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelProcesosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddProceso)
                .addGap(40, 40, 40))
        );
        PanelProcesosLayout.setVerticalGroup(
            PanelProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPID))
                .addGap(26, 26, 26)
                .addGroup(PanelProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBursTime)
                    .addComponent(txtBurstTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(chbValoresAleatorios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddProceso)
                .addGap(8, 8, 8))
        );

        PanelPoliticaPlanif.setBorder(javax.swing.BorderFactory.createTitledBorder("Política de Planificacion"));

        lblAlgoritmoPlanificacion.setText("Politica");

        cmbAlgoritmoPlanificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FCFS", "SJF", "Round Robin", "Prioridades" }));
        cmbAlgoritmoPlanificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAlgoritmoPlanificacionActionPerformed(evt);
            }
        });

        lblTipoPolitica.setText("Tipo de Politica");

        cmbTipoPoliticaPlanif.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Expropiativo", "Expropiativo" }));
        cmbTipoPoliticaPlanif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoPoliticaPlanifActionPerformed(evt);
            }
        });

        txtTimeQuantum.setText("Tiempo Quantum");

        spnTimeQuantum.setToolTipText("");
        spnTimeQuantum.setEnabled(false);
        spnTimeQuantum.setValue(10);
        spnTimeQuantum.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnTimeQuantumStateChanged(evt);
            }
        });

        javax.swing.GroupLayout PanelPoliticaPlanifLayout = new javax.swing.GroupLayout(PanelPoliticaPlanif);
        PanelPoliticaPlanif.setLayout(PanelPoliticaPlanifLayout);
        PanelPoliticaPlanifLayout.setHorizontalGroup(
            PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPoliticaPlanifLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPoliticaPlanifLayout.createSequentialGroup()
                        .addComponent(txtTimeQuantum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnTimeQuantum))
                    .addGroup(PanelPoliticaPlanifLayout.createSequentialGroup()
                        .addGroup(PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTipoPolitica)
                            .addComponent(lblAlgoritmoPlanificacion))
                        .addGap(20, 20, 20)
                        .addGroup(PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTipoPoliticaPlanif, 0, 103, Short.MAX_VALUE)
                            .addComponent(cmbAlgoritmoPlanificacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        PanelPoliticaPlanifLayout.setVerticalGroup(
            PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPoliticaPlanifLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlgoritmoPlanificacion)
                    .addComponent(cmbAlgoritmoPlanificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoPolitica)
                    .addComponent(cmbTipoPoliticaPlanif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(PanelPoliticaPlanifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimeQuantum, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spnTimeQuantum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelPoliticaPlanif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(PanelPoliticaPlanif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        PoliticaConfigAdic.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros de la Memoria Principal"));

        txtAsigMemoria.setText("Algoritmo de Asignación de Memoria");

        txtCapMemoria.setText("Capacidad de la Memoria Principal");

        cmbAsigMemoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Fit", "Best Fit", "Worst Fit" }));
        cmbAsigMemoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAsigMemoriaActionPerformed(evt);
            }
        });

        spnCapMemoria.setValue(2000);
        spnCapMemoria.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnCapMemoriaStateChanged(evt);
            }
        });

        javax.swing.GroupLayout PoliticaConfigAdicLayout = new javax.swing.GroupLayout(PoliticaConfigAdic);
        PoliticaConfigAdic.setLayout(PoliticaConfigAdicLayout);
        PoliticaConfigAdicLayout.setHorizontalGroup(
            PoliticaConfigAdicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PoliticaConfigAdicLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PoliticaConfigAdicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCapMemoria)
                    .addComponent(txtAsigMemoria))
                .addGroup(PoliticaConfigAdicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PoliticaConfigAdicLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnCapMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PoliticaConfigAdicLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(cmbAsigMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PoliticaConfigAdicLayout.setVerticalGroup(
            PoliticaConfigAdicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PoliticaConfigAdicLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(PoliticaConfigAdicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAsigMemoria)
                    .addComponent(cmbAsigMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PoliticaConfigAdicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCapMemoria)
                    .addComponent(spnCapMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        PanelSimulacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulación"));

        PanelVelocidadSimulacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Velocidad de la simulación"));

        sldVelocidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldVelocidadStateChanged(evt);
            }
        });

        btnPlayStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/play.png"))); // NOI18N
        btnPlayStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayStopActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/slow.png"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/fast.png"))); // NOI18N

        javax.swing.GroupLayout PanelVelocidadSimulacionLayout = new javax.swing.GroupLayout(PanelVelocidadSimulacion);
        PanelVelocidadSimulacion.setLayout(PanelVelocidadSimulacionLayout);
        PanelVelocidadSimulacionLayout.setHorizontalGroup(
            PanelVelocidadSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelVelocidadSimulacionLayout.createSequentialGroup()
                .addGroup(PanelVelocidadSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sldVelocidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelVelocidadSimulacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPlayStop, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)))
                .addContainerGap())
        );
        PanelVelocidadSimulacionLayout.setVerticalGroup(
            PanelVelocidadSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelVelocidadSimulacionLayout.createSequentialGroup()
                .addComponent(sldVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelVelocidadSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelVelocidadSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnPlayStop, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel12))
                    .addComponent(jLabel11))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout PanelSimulacionLayout = new javax.swing.GroupLayout(PanelSimulacion);
        PanelSimulacion.setLayout(PanelSimulacionLayout);
        PanelSimulacionLayout.setHorizontalGroup(
            PanelSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSimulacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelVelocidadSimulacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelSimulacionLayout.setVerticalGroup(
            PanelSimulacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSimulacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelVelocidadSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 120, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout PanelConfiguracionLayout = new javax.swing.GroupLayout(PanelConfiguracion);
        PanelConfiguracion.setLayout(PanelConfiguracionLayout);
        PanelConfiguracionLayout.setHorizontalGroup(
            PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PanelProcesos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PoliticaConfigAdic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PanelSimulacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        PanelConfiguracionLayout.setVerticalGroup(
            PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConfiguracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelProcesos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PoliticaConfigAdic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        PanelSimulacion.getAccessibleContext().setAccessibleDescription("");

        PanelColaProcesos.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesos"));
        PanelColaProcesos.setLayout(new java.awt.BorderLayout());

        ColaProcesos.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        ColaProcesos.add(jScrollPane1);

        ScrollColaProcesos.setViewportView(ColaProcesos);

        PanelColaProcesos.add(ScrollColaProcesos, java.awt.BorderLayout.CENTER);

        PanelMemoriaRAM.setBorder(javax.swing.BorderFactory.createTitledBorder("Memoria RAM"));

        MemoriaRAM.setLayout(new javax.swing.BoxLayout(MemoriaRAM, javax.swing.BoxLayout.LINE_AXIS));
        ScrollMemoriaRAM.setViewportView(MemoriaRAM);

        javax.swing.GroupLayout PanelMemoriaRAMLayout = new javax.swing.GroupLayout(PanelMemoriaRAM);
        PanelMemoriaRAM.setLayout(PanelMemoriaRAMLayout);
        PanelMemoriaRAMLayout.setHorizontalGroup(
            PanelMemoriaRAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMemoriaRAMLayout.createSequentialGroup()
                .addComponent(ScrollMemoriaRAM)
                .addContainerGap())
        );
        PanelMemoriaRAMLayout.setVerticalGroup(
            PanelMemoriaRAMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMemoriaRAMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollMemoriaRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelEstadisticas.setBorder(javax.swing.BorderFactory.createTitledBorder("Panel de Estadísticas"));

        lblTiempoUso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTiempoUso.setText("0");

        lblTiempoOcioso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTiempoOcioso.setText("0");

        lblTiempoEspProm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTiempoEspProm.setText("0");

        lblDuracion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblDuracion.setText("0");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Tiempo de uso (CPU):");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Tiempo ocioso (CPU):");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Tiempo de Retorno Promedio (Procesos):");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Duración de la simulación (milisegundos):");

        lblFragmentacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblFragmentacion.setText("0");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Fragmentación Externa:");

        lblTiempoRespuesta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTiempoRespuesta.setText("0");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Tiempo de Respuesta Promedio (Procesos):");

        lblWaitingTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblWaitingTime.setText("0");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Tiempo de Espera Promedio (Procesos):");

        javax.swing.GroupLayout PanelEstadisticasLayout = new javax.swing.GroupLayout(PanelEstadisticas);
        PanelEstadisticas.setLayout(PanelEstadisticasLayout);
        PanelEstadisticasLayout.setHorizontalGroup(
            PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEstadisticasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEstadisticasLayout.createSequentialGroup()
                        .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanelEstadisticasLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblFragmentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelEstadisticasLayout.createSequentialGroup()
                                .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelEstadisticasLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(lblTiempoUso, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEstadisticasLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(lblTiempoOcioso, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTiempoEspProm, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                            .addComponent(lblTiempoRespuesta, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                            .addComponent(lblWaitingTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)))
                    .addGroup(PanelEstadisticasLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(lblDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelEstadisticasLayout.setVerticalGroup(
            PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEstadisticasLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTiempoUso)
                    .addComponent(jLabel3)
                    .addComponent(lblTiempoEspProm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblTiempoOcioso)
                    .addComponent(jLabel14)
                    .addComponent(lblTiempoRespuesta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lblFragmentacion)
                    .addComponent(lblWaitingTime)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(PanelEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblDuracion)))
        );

        PanelLeyendaProcesos.setBorder(javax.swing.BorderFactory.createTitledBorder("Leyenda de Procesos"));

        LeyendaEjec.setBackground(Color.GREEN);
        LeyendaEjec.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        LeyendaEjec.setPreferredSize(new java.awt.Dimension(13, 13));

        javax.swing.GroupLayout LeyendaEjecLayout = new javax.swing.GroupLayout(LeyendaEjec);
        LeyendaEjec.setLayout(LeyendaEjecLayout);
        LeyendaEjecLayout.setHorizontalGroup(
            LeyendaEjecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        LeyendaEjecLayout.setVerticalGroup(
            LeyendaEjecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("Ejecutando");

        LeyendoListos.setBackground(Color.YELLOW);
        LeyendoListos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        LeyendoListos.setPreferredSize(new java.awt.Dimension(13, 13));

        javax.swing.GroupLayout LeyendoListosLayout = new javax.swing.GroupLayout(LeyendoListos);
        LeyendoListos.setLayout(LeyendoListosLayout);
        LeyendoListosLayout.setHorizontalGroup(
            LeyendoListosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        LeyendoListosLayout.setVerticalGroup(
            LeyendoListosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("Listos");

        LeyendaBloqueados.setBackground(Color.PINK);
        LeyendaBloqueados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout LeyendaBloqueadosLayout = new javax.swing.GroupLayout(LeyendaBloqueados);
        LeyendaBloqueados.setLayout(LeyendaBloqueadosLayout);
        LeyendaBloqueadosLayout.setHorizontalGroup(
            LeyendaBloqueadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        LeyendaBloqueadosLayout.setVerticalGroup(
            LeyendaBloqueadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel8.setText("Bloqueado");

        LeyendaFinalizados.setBackground(Color.BLUE);
        LeyendaFinalizados.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        LeyendaFinalizados.setPreferredSize(new java.awt.Dimension(13, 13));

        javax.swing.GroupLayout LeyendaFinalizadosLayout = new javax.swing.GroupLayout(LeyendaFinalizados);
        LeyendaFinalizados.setLayout(LeyendaFinalizadosLayout);
        LeyendaFinalizadosLayout.setHorizontalGroup(
            LeyendaFinalizadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        LeyendaFinalizadosLayout.setVerticalGroup(
            LeyendaFinalizadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel9.setText("Finalizados");

        LeyendaError.setBackground(Color.RED);
        LeyendaError.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        LeyendaError.setPreferredSize(new java.awt.Dimension(13, 13));

        javax.swing.GroupLayout LeyendaErrorLayout = new javax.swing.GroupLayout(LeyendaError);
        LeyendaError.setLayout(LeyendaErrorLayout);
        LeyendaErrorLayout.setHorizontalGroup(
            LeyendaErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        LeyendaErrorLayout.setVerticalGroup(
            LeyendaErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setText("Error");
        jLabel10.setPreferredSize(new java.awt.Dimension(13, 13));

        javax.swing.GroupLayout PanelLeyendaProcesosLayout = new javax.swing.GroupLayout(PanelLeyendaProcesos);
        PanelLeyendaProcesos.setLayout(PanelLeyendaProcesosLayout);
        PanelLeyendaProcesosLayout.setHorizontalGroup(
            PanelLeyendaProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLeyendaProcesosLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(LeyendaEjec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(LeyendaError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(LeyendaBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(LeyendaFinalizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(LeyendoListos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(37, 37, 37))
        );
        PanelLeyendaProcesosLayout.setVerticalGroup(
            PanelLeyendaProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLeyendaProcesosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLeyendaProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LeyendoListos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LeyendaEjec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LeyendaError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LeyendaBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(LeyendaFinalizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelSistemaOperativoLayout = new javax.swing.GroupLayout(PanelSistemaOperativo);
        PanelSistemaOperativo.setLayout(PanelSistemaOperativoLayout);
        PanelSistemaOperativoLayout.setHorizontalGroup(
            PanelSistemaOperativoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelSistemaOperativoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelSistemaOperativoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelConfiguracion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelEstadisticas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelSistemaOperativoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelMemoriaRAM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelColaProcesos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelLeyendaProcesos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelSistemaOperativoLayout.setVerticalGroup(
            PanelSistemaOperativoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelSistemaOperativoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(PanelSistemaOperativoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelSistemaOperativoLayout.createSequentialGroup()
                        .addComponent(PanelConfiguracion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PanelEstadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelSistemaOperativoLayout.createSequentialGroup()
                        .addComponent(PanelColaProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelLeyendaProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 21, Short.MAX_VALUE)
                        .addComponent(PanelMemoriaRAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 35, Short.MAX_VALUE))))
        );

        PanelConfiguracion.getAccessibleContext().setAccessibleName("Parámetros de la Simulación");

        TabbedPaneSO.addTab("Simulación", PanelSistemaOperativo);

        PanelEjecutando.setBorder(javax.swing.BorderFactory.createTitledBorder("Ejecutando"));

        tblEjec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "PC", "Memoria", "Prioridad", "Progreso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollEjecutando.setViewportView(tblEjec);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/cpu.png"))); // NOI18N

        javax.swing.GroupLayout PanelEjecutandoLayout = new javax.swing.GroupLayout(PanelEjecutando);
        PanelEjecutando.setLayout(PanelEjecutandoLayout);
        PanelEjecutandoLayout.setHorizontalGroup(
            PanelEjecutandoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEjecutandoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelEjecutandoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollEjecutando)
                    .addGroup(PanelEjecutandoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelEjecutandoLayout.setVerticalGroup(
            PanelEjecutandoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEjecutandoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollEjecutando, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel5)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        PanelListos.setBorder(javax.swing.BorderFactory.createTitledBorder("Cola de Listos"));

        tblListos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "PC", "Memoria", "Prioridad", "Progreso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollListos.setViewportView(tblListos);

        javax.swing.GroupLayout PanelListosLayout = new javax.swing.GroupLayout(PanelListos);
        PanelListos.setLayout(PanelListosLayout);
        PanelListosLayout.setHorizontalGroup(
            PanelListosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelListosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollListos, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelListosLayout.setVerticalGroup(
            PanelListosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollListos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelBloqueados.setBorder(javax.swing.BorderFactory.createTitledBorder("Cola de Espera"));

        tblBloqueados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "PC", "Memoria", "Prioridad", "Progreso", "Disp. Interrupcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollBloqueados.setViewportView(tblBloqueados);

        javax.swing.GroupLayout PanelBloqueadosLayout = new javax.swing.GroupLayout(PanelBloqueados);
        PanelBloqueados.setLayout(PanelBloqueadosLayout);
        PanelBloqueadosLayout.setHorizontalGroup(
            PanelBloqueadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBloqueadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollBloqueados, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelBloqueadosLayout.setVerticalGroup(
            PanelBloqueadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBloqueadosLayout.createSequentialGroup()
                .addComponent(ScrollBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelFinalizados.setBorder(javax.swing.BorderFactory.createTitledBorder("Procesos Finalizados"));

        tblFinal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "PCError", "Memoria"
            }
        ));
        ScrollFinalizados.setViewportView(tblFinal);

        javax.swing.GroupLayout PanelFinalizadosLayout = new javax.swing.GroupLayout(PanelFinalizados);
        PanelFinalizados.setLayout(PanelFinalizadosLayout);
        PanelFinalizadosLayout.setHorizontalGroup(
            PanelFinalizadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFinalizadosLayout.createSequentialGroup()
                .addComponent(ScrollFinalizados, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelFinalizadosLayout.setVerticalGroup(
            PanelFinalizadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollFinalizados, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Procesos"));

        tlbListaProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Memoria", "Prioridad", "Estado"
            }
        ));
        ScrollFinalizados1.setViewportView(tlbListaProcesos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelTablasProcesosLayout = new javax.swing.GroupLayout(PanelTablasProcesos);
        PanelTablasProcesos.setLayout(PanelTablasProcesosLayout);
        PanelTablasProcesosLayout.setHorizontalGroup(
            PanelTablasProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTablasProcesosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTablasProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTablasProcesosLayout.createSequentialGroup()
                        .addComponent(PanelListos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelEjecutando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelTablasProcesosLayout.createSequentialGroup()
                        .addComponent(PanelFinalizados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelTablasProcesosLayout.setVerticalGroup(
            PanelTablasProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTablasProcesosLayout.createSequentialGroup()
                .addGroup(PanelTablasProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelListos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelBloqueados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelEjecutando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelTablasProcesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelFinalizados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        TabbedPaneSO.addTab("Colas de Procesos", PanelTablasProcesos);

        PanelProcesosEjecutados.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de Ejecución de Procesos"));

        tblHistEjec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "PC", "Memoria", "Prioridad", "Progreso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollHistoricoEjec.setViewportView(tblHistEjec);

        javax.swing.GroupLayout PanelProcesosEjecutadosLayout = new javax.swing.GroupLayout(PanelProcesosEjecutados);
        PanelProcesosEjecutados.setLayout(PanelProcesosEjecutadosLayout);
        PanelProcesosEjecutadosLayout.setHorizontalGroup(
            PanelProcesosEjecutadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosEjecutadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollHistoricoEjec, javax.swing.GroupLayout.DEFAULT_SIZE, 953, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelProcesosEjecutadosLayout.setVerticalGroup(
            PanelProcesosEjecutadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosEjecutadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollHistoricoEjec, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelProcesosBloqueados.setVisible(false);
        PanelProcesosBloqueados.setBorder(javax.swing.BorderFactory.createTitledBorder("Historico de Procesos Bloqueados"));
        PanelProcesosBloqueados.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tblHistBloqueados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "PC", "Memoria", "Prioridad", "Progreso", "Dispositivo de Interrupcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollHistoricoBloqueados.setViewportView(tblHistBloqueados);

        javax.swing.GroupLayout PanelProcesosBloqueadosLayout = new javax.swing.GroupLayout(PanelProcesosBloqueados);
        PanelProcesosBloqueados.setLayout(PanelProcesosBloqueadosLayout);
        PanelProcesosBloqueadosLayout.setHorizontalGroup(
            PanelProcesosBloqueadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosBloqueadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollHistoricoBloqueados, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelProcesosBloqueadosLayout.setVerticalGroup(
            PanelProcesosBloqueadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosBloqueadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollHistoricoBloqueados, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PanelTablaProcesosHistoricoLayout = new javax.swing.GroupLayout(PanelTablaProcesosHistorico);
        PanelTablaProcesosHistorico.setLayout(PanelTablaProcesosHistoricoLayout);
        PanelTablaProcesosHistoricoLayout.setHorizontalGroup(
            PanelTablaProcesosHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTablaProcesosHistoricoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(PanelProcesosEjecutados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(PanelProcesosBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        PanelTablaProcesosHistoricoLayout.setVerticalGroup(
            PanelTablaProcesosHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTablaProcesosHistoricoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(PanelTablaProcesosHistoricoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelProcesosEjecutados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelTablaProcesosHistoricoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(PanelProcesosBloqueados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(275, Short.MAX_VALUE))
        );

        TabbedPaneSO.addTab("Historial de Procesos", PanelTablaProcesosHistorico);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Disco"));

        tlbDisco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "PID", "Memoria"
            }
        ));
        ScrollFinalizados2.setViewportView(tlbDisco);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(ScrollFinalizados2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Impresora"));

        tlbImpresora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "PID", "Memoria"
            }
        ));
        ScrollFinalizados3.setViewportView(tlbImpresora);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados3, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Teclado"));

        tlbTeclado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "PID", "Memoria"
            }
        ));
        ScrollFinalizados4.setViewportView(tlbTeclado);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados4, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Mouse"));

        tlbMouse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "PID", "Memoria"
            }
        ));
        ScrollFinalizados5.setViewportView(tlbMouse);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(ScrollFinalizados5, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados5, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("USB"));

        tlbUSB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "PID", "Memoria"
            }
        ));
        ScrollFinalizados6.setViewportView(tlbUSB);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(ScrollFinalizados6, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollFinalizados6, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(254, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(284, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(470, 470, 470))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        TabbedPaneSO.addTab("Colas I/O", jPanel4);

        PanelProcesosEjecutados1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de Atención de Interrupciones"));

        tlbInterrupciones.setAutoCreateRowSorter(true);
        tlbInterrupciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Tiempo Simulación (ms)", "PID del proceso atendido", "Código Int.", "Descripción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tlbInterrupciones.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ScrollHistoricoEjec1.setViewportView(tlbInterrupciones);

        javax.swing.GroupLayout PanelProcesosEjecutados1Layout = new javax.swing.GroupLayout(PanelProcesosEjecutados1);
        PanelProcesosEjecutados1.setLayout(PanelProcesosEjecutados1Layout);
        PanelProcesosEjecutados1Layout.setHorizontalGroup(
            PanelProcesosEjecutados1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosEjecutados1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollHistoricoEjec1, javax.swing.GroupLayout.DEFAULT_SIZE, 1349, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelProcesosEjecutados1Layout.setVerticalGroup(
            PanelProcesosEjecutados1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelProcesosEjecutados1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollHistoricoEjec1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1629, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(108, 108, 108)
                    .addComponent(PanelProcesosEjecutados1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(140, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 837, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(PanelProcesosEjecutados1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(53, Short.MAX_VALUE)))
        );

        TabbedPaneSO.addTab("Interrupciones", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(TabbedPaneSO, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPaneSO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Detecta cambios en el spinner del quantum
    // y detiene la simulación,
    // actualiza el valor del quantum
    // y vuelve a iniciar la simulación
    private void spnTimeQuantumStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnTimeQuantumStateChanged
        t.stop();
        so.parar();
        int nq = (int)spnTimeQuantum.getValue();
        so.setQuantum(nq);
        if(encendido){
            t.start();
            so.iniciar();
        }
    }//GEN-LAST:event_spnTimeQuantumStateChanged

    // Detecta cambios en el spinner de la cantidad de memoria
    // y detiene la simulación,
    // actualiza el valor de la memoria
    // y vuelve a iniciar la simulación
    private void spnCapMemoriaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnCapMemoriaStateChanged
        t.stop();
        so.parar();
        int ncm = (int)spnCapMemoria.getValue();
        so.cambiarCapMemoria(ncm);
        PanelMemoriaRAM.setBorder(BorderFactory.createTitledBorder("RAM "+ncm+"MB"));
        if(encendido){
            t.start();
            so.iniciar();
        }
    }//GEN-LAST:event_spnCapMemoriaStateChanged

    // Detecta un cambio en la selección del comboBox
    // y cambia el algoritmo de asignación de la memoria
    private void cmbAsigMemoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAsigMemoriaActionPerformed
        so.setAsignacionMemoria(cmbAsigMemoria.getSelectedIndex());
    }//GEN-LAST:event_cmbAsigMemoriaActionPerformed

    // Detecta un cambio en la selección del comboBox
    // y cambia el contexto de la asignación (Expropiativo - Preemptive, No expropiativo - Non-preemptive)
    private void cmbTipoPoliticaPlanifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoPoliticaPlanifActionPerformed
        so.setApropiativa(cmbTipoPoliticaPlanif.getSelectedIndex()==0);
    }//GEN-LAST:event_cmbTipoPoliticaPlanifActionPerformed

    private void cmbAlgoritmoPlanificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAlgoritmoPlanificacionActionPerformed
        t.stop();
        so.parar();
        so.setPolitica(cmbAlgoritmoPlanificacion.getSelectedIndex());
        // Si se escoge como algoritmo de planificación a Round Robin
        // entonces, se activa el spinner para el quantum
         // Si se escoge como algoritmo de planificación a Round Robin
        // entonces, se activa el spinner para el quantum
        if(cmbAlgoritmoPlanificacion.getSelectedIndex()==2){
            spnTimeQuantum.setEnabled(true);
            // Solo se puede se en modo expropiativo
            cmbTipoPoliticaPlanif.setSelectedIndex(1);
            cmbTipoPoliticaPlanif.setEnabled(false);
        }
        else if (cmbAlgoritmoPlanificacion.getSelectedIndex()==0) {
            // Solo se puede se en modo no expropiativo
            cmbTipoPoliticaPlanif.setSelectedIndex(0);
            cmbTipoPoliticaPlanif.setEnabled(false);
        }
        else{
            spnTimeQuantum.setEnabled(false);
            cmbTipoPoliticaPlanif.setEnabled(true);
        }
        if(encendido){
            t.start();
            so.iniciar();
        }
    }//GEN-LAST:event_cmbAlgoritmoPlanificacionActionPerformed

    // Se activa cada vez que se presiona el botón
    private void btnAddProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProcesoActionPerformed
        try {
            int bt = Integer.parseInt(txtBurstTime.getText());
            // Llama al scheduler de largo plazo para verificar si
            // se admite o no que el proceso ingrese
            // a la cola de listos
            if(so.crearProcesoPersonalizado(bt)){
                System.out.println("Se creo nuevo proceso personalizado");
                so.graficarColaProcesos(ColaProcesos,tblEjec,tblListos,tblBloqueados,tblFinal,tblHistEjec,tblHistBloqueados,tlbListaProcesos,tlbDisco,tlbImpresora,tlbTeclado,tlbMouse,tlbUSB,tlbInterrupciones);
                //so.pintarListos(jpListos);
                txtPID.setText(Proceso.numeroProcesos+"");
                validate();
            }else{
                System.out.println("No se pudo crear nuevo proceso");
                //jlErrorNuevoProceso.setText("Nivel de multiprogramación: "+SO.maxCantProcesos);
            }
        } catch (NumberFormatException e) {
            //jlErrorNuevoProceso.setText("Introducir un entero");
            System.out.println("Numero no valido");
        }
    }//GEN-LAST:event_btnAddProcesoActionPerformed

    // Se activa cuándo hacen click sobre el botón para iniciar o terminar la simulación
    private void btnPlayStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayStopActionPerformed
        iniciarSimulacion();
        //PanelInterrupcionTeclado tecla = new PanelInterrupcionTeclado();
        //tecla.setVisible(true);
        
    }//GEN-LAST:event_btnPlayStopActionPerformed

    // Utiliza el valor del slider para ajustar el delay
    // del timer propio, del sistemaOperativo
    // (el cual cambia el delay del scheduler y CPU),
    // del timer de la clase usuario
    // (que genera los procesos aleatorios en tiempos aleatorios)
    private void sldVelocidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldVelocidadStateChanged
        System.out.println("Velocidad: "+sldVelocidad.getValue()+ "%");
        delay = 101 - sldVelocidad.getValue();
        t.setDelay(delay);
        so.cambiarDelay(delay);
        u.setDelay(delay);
    }//GEN-LAST:event_sldVelocidadStateChanged

    // Se activa cuándo se marca el checkBox de Generar valores aleatorios
    // Si se marca, llama al método iniciar la clase usuario
    // Si no se marca, llama al método para de la clase usuario
    private void chbValoresAleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbValoresAleatoriosActionPerformed
        if(chbValoresAleatorios.isSelected()){
            u.iniciar();
        }else{
            u.parar();
        }
    }//GEN-LAST:event_chbValoresAleatoriosActionPerformed
    
    @Override
    public void setVisible(boolean bln) {
        super.setVisible(bln);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //L&F: Metal, Nimbus, Windows
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelSO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelSO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ColaProcesos;
    private javax.swing.JPanel LeyendaBloqueados;
    private javax.swing.JPanel LeyendaEjec;
    private javax.swing.JPanel LeyendaError;
    private javax.swing.JPanel LeyendaFinalizados;
    private javax.swing.JPanel LeyendoListos;
    private javax.swing.JPanel MemoriaRAM;
    private javax.swing.JPanel PanelBloqueados;
    private javax.swing.JPanel PanelColaProcesos;
    private javax.swing.JPanel PanelConfiguracion;
    private javax.swing.JPanel PanelEjecutando;
    private javax.swing.JPanel PanelEstadisticas;
    private javax.swing.JPanel PanelFinalizados;
    private javax.swing.JPanel PanelLeyendaProcesos;
    private javax.swing.JPanel PanelListos;
    private javax.swing.JPanel PanelMemoriaRAM;
    private javax.swing.JPanel PanelPoliticaPlanif;
    private javax.swing.JPanel PanelProcesos;
    private javax.swing.JPanel PanelProcesosBloqueados;
    private javax.swing.JPanel PanelProcesosEjecutados;
    private javax.swing.JPanel PanelProcesosEjecutados1;
    private javax.swing.JPanel PanelSimulacion;
    private javax.swing.JPanel PanelSistemaOperativo;
    private javax.swing.JPanel PanelTablaProcesosHistorico;
    private javax.swing.JPanel PanelTablasProcesos;
    private javax.swing.JPanel PanelVelocidadSimulacion;
    private javax.swing.JPanel PoliticaConfigAdic;
    private javax.swing.JScrollPane ScrollBloqueados;
    private javax.swing.JScrollPane ScrollColaProcesos;
    private javax.swing.JScrollPane ScrollEjecutando;
    private javax.swing.JScrollPane ScrollFinalizados;
    private javax.swing.JScrollPane ScrollFinalizados1;
    private javax.swing.JScrollPane ScrollFinalizados2;
    private javax.swing.JScrollPane ScrollFinalizados3;
    private javax.swing.JScrollPane ScrollFinalizados4;
    private javax.swing.JScrollPane ScrollFinalizados5;
    private javax.swing.JScrollPane ScrollFinalizados6;
    private javax.swing.JScrollPane ScrollHistoricoBloqueados;
    private javax.swing.JScrollPane ScrollHistoricoEjec;
    private javax.swing.JScrollPane ScrollHistoricoEjec1;
    private javax.swing.JScrollPane ScrollListos;
    private javax.swing.JScrollPane ScrollMemoriaRAM;
    private javax.swing.JTabbedPane TabbedPaneSO;
    private javax.swing.JButton btnAddProceso;
    private javax.swing.JButton btnPlayStop;
    private javax.swing.JCheckBox chbValoresAleatorios;
    private javax.swing.JComboBox<String> cmbAlgoritmoPlanificacion;
    private javax.swing.JComboBox<String> cmbAsigMemoria;
    private javax.swing.JComboBox<String> cmbTipoPoliticaPlanif;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAlgoritmoPlanificacion;
    private javax.swing.JLabel lblBursTime;
    private javax.swing.JLabel lblDuracion;
    private javax.swing.JLabel lblFragmentacion;
    private javax.swing.JLabel lblPID;
    private javax.swing.JLabel lblTiempoEspProm;
    private javax.swing.JLabel lblTiempoOcioso;
    private javax.swing.JLabel lblTiempoRespuesta;
    private javax.swing.JLabel lblTiempoUso;
    private javax.swing.JLabel lblTipoPolitica;
    private javax.swing.JLabel lblWaitingTime;
    private javax.swing.JSlider sldVelocidad;
    private javax.swing.JSpinner spnCapMemoria;
    private javax.swing.JSpinner spnTimeQuantum;
    private javax.swing.JTable tblBloqueados;
    private javax.swing.JTable tblEjec;
    private javax.swing.JTable tblFinal;
    private javax.swing.JTable tblHistBloqueados;
    private javax.swing.JTable tblHistEjec;
    private javax.swing.JTable tblListos;
    private javax.swing.JTable tlbDisco;
    private javax.swing.JTable tlbImpresora;
    private javax.swing.JTable tlbInterrupciones;
    private javax.swing.JTable tlbListaProcesos;
    private javax.swing.JTable tlbMouse;
    private javax.swing.JTable tlbTeclado;
    private javax.swing.JTable tlbUSB;
    private javax.swing.JLabel txtAsigMemoria;
    private javax.swing.JTextField txtBurstTime;
    private javax.swing.JLabel txtCapMemoria;
    private javax.swing.JTextField txtPID;
    private javax.swing.JLabel txtTimeQuantum;
    // End of variables declaration//GEN-END:variables

}
